{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _sleep = require('./sleep');\n\nvar _sleep2 = _interopRequireDefault(_sleep);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = function () {\n  var _ref = (0, _asyncToGenerator3.default)(\n  /*#__PURE__*/\n  _regenerator2.default.mark(function _callee(fn, numRetries, interval) {\n    var lastError, times;\n    return _regenerator2.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            lastError = void 0;\n            times = 0;\n\n          case 2:\n            if (!(times < numRetries)) {\n              _context.next = 18;\n              break;\n            }\n\n            if (!times) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 6;\n            return (0, _sleep2.default)(interval);\n\n          case 6:\n            _context.prev = 6;\n            _context.next = 9;\n            return fn();\n\n          case 9:\n            return _context.abrupt('return', _context.sent);\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context['catch'](6);\n            lastError = _context.t0;\n\n          case 15:\n            times++;\n            _context.next = 2;\n            break;\n\n          case 18:\n            throw lastError;\n\n          case 19:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[6, 12]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"script"}