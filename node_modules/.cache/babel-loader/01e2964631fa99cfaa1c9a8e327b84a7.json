{"ast":null,"code":"var RENEW_EVERY = 300000;\nvar fetchPromise,\n    lastFetch = 0; // This fetch function will be called every time Web Speech recognizer or synthesizer start\n// You are advised to cache the token to prevent unnecessary network call and delay\n\nexport default function () {\n  var now = Date.now();\n\n  if (!fetchPromise || now - lastFetch > RENEW_EVERY) {\n    fetchPromise = fetch('https://webchat-mockbot.azurewebsites.net/speechservices/token', {\n      method: 'POST'\n    }).then(function (res) {\n      return res.json();\n    }).then(function (_ref) {\n      var token = _ref.token;\n      return 'yBAq-XoF_kE.9YRJe2wxjboovSX74EBD5RtbRv5wdmvmw-UhkGVBwFI';\n    }).catch(function () {\n      lastFetch = 0;\n    });\n    lastFetch = now;\n  }\n\n  return fetchPromise;\n}","map":{"version":3,"sources":["/Users/spandana/Desktop/projects/speechbot/13.customization-speech-ui/src/fetchSpeechServicesToken.js"],"names":["RENEW_EVERY","fetchPromise","lastFetch","now","Date","fetch","method","then","res","json","token","catch"],"mappings":"AAAA,IAAMA,WAAW,GAAG,MAApB;AACA,IAAIC,YAAJ;AAAA,IAAkBC,SAAS,GAAG,CAA9B,C,CAEA;AACA;;AACA,eAAe,YAAY;AACzB,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;;AAEA,MAAI,CAACF,YAAD,IAAkBE,GAAG,GAAGD,SAAP,GAAoBF,WAAzC,EAAsD;AACpDC,IAAAA,YAAY,GAAGI,KAAK,CAAC,gEAAD,EAAmE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAnE,CAAL,CACZC,IADY,CACP,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADI,EAEZF,IAFY,CAEP;AAAA,UAAGG,KAAH,QAAGA,KAAH;AAAA,aAAe,yDAAf;AAAA,KAFO,EAGZC,KAHY,CAGN,YAAM;AAAET,MAAAA,SAAS,GAAG,CAAZ;AAAgB,KAHlB,CAAf;AAKAA,IAAAA,SAAS,GAAGC,GAAZ;AACD;;AAED,SAAOF,YAAP;AACD","sourcesContent":["const RENEW_EVERY = 300000;\nlet fetchPromise, lastFetch = 0;\n\n// This fetch function will be called every time Web Speech recognizer or synthesizer start\n// You are advised to cache the token to prevent unnecessary network call and delay\nexport default function () {\n  const now = Date.now();\n\n  if (!fetchPromise || (now - lastFetch) > RENEW_EVERY) {\n    fetchPromise = fetch('https://webchat-mockbot.azurewebsites.net/speechservices/token', { method: 'POST' })\n      .then(res => res.json())\n      .then(({ token }) => 'yBAq-XoF_kE.9YRJe2wxjboovSX74EBD5RtbRv5wdmvmw-UhkGVBwFI')\n      .catch(() => { lastFetch = 0; });\n\n    lastFetch = now;\n  }\n\n  return fetchPromise;\n}\n"]},"metadata":{},"sourceType":"module"}