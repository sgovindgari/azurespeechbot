'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _sleep = require('./sleep');

var _sleep2 = _interopRequireDefault(_sleep);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(fn, numRetries, interval) {
    var lastError, times;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            lastError = void 0;
            times = 0;

          case 2:
            if (!(times < numRetries)) {
              _context.next = 18;
              break;
            }

            if (!times) {
              _context.next = 6;
              break;
            }

            _context.next = 6;
            return (0, _sleep2.default)(interval);

          case 6:
            _context.prev = 6;
            _context.next = 9;
            return fn();

          case 9:
            return _context.abrupt('return', _context.sent);

          case 12:
            _context.prev = 12;
            _context.t0 = _context['catch'](6);

            lastError = _context.t0;

          case 15:
            times++;
            _context.next = 2;
            break;

          case 18:
            throw lastError;

          case 19:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this, [[6, 12]]);
  }));

  return function (_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yZXRyeS5qcyJdLCJuYW1lcyI6WyJmbiIsIm51bVJldHJpZXMiLCJpbnRlcnZhbCIsImxhc3RFcnJvciIsInRpbWVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7O3NGQUVlLGlCQUFnQkEsRUFBaEIsRUFBb0JDLFVBQXBCLEVBQWdDQyxRQUFoQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDVEMscUJBRFM7QUFHSkMsaUJBSEksR0FHSSxDQUhKOztBQUFBO0FBQUEsa0JBR09BLFFBQVFILFVBSGY7QUFBQTtBQUFBO0FBQUE7O0FBQUEsaUJBSVBHLEtBSk87QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSxtQkFLSCxxQkFBTUYsUUFBTixDQUxHOztBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQVNJRixJQVRKOztBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBOztBQVdURzs7QUFYUztBQUcyQkMsbUJBSDNCO0FBQUE7QUFBQTs7QUFBQTtBQUFBLGtCQWVQRCxTQWZPOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEciLCJmaWxlIjoicmV0cnkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc2xlZXAgZnJvbSAnLi9zbGVlcCc7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIChmbiwgbnVtUmV0cmllcywgaW50ZXJ2YWwpIHtcbiAgbGV0IGxhc3RFcnJvcjtcblxuICBmb3IgKGxldCB0aW1lcyA9IDA7IHRpbWVzIDwgbnVtUmV0cmllczsgdGltZXMrKykge1xuICAgIGlmICh0aW1lcykge1xuICAgICAgYXdhaXQgc2xlZXAoaW50ZXJ2YWwpO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICByZXR1cm4gYXdhaXQgZm4oKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgbGFzdEVycm9yID0gZXJyb3I7XG4gICAgfVxuICB9XG5cbiAgdGhyb3cgbGFzdEVycm9yO1xufVxuIl19